<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
	 xmlns:content="http://purl.org/rss/1.0/modules/content/"
	 xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	 xmlns:dc="http://purl.org/dc/elements/1.1/"
	 xmlns:atom="http://www.w3.org/2005/Atom"
	 xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	 xmlns:slash="http://purl.org/rss/1.0/modules/slash/">

<channel>
  <title>Searcher's Log</title>
  <atom:link href="http://blog.crackcell.com/feed/" rel="self" type="application/rss+xml" />
  <link>http://blog.crackcell.com</link>
  <description>A code monkey's note on c c++ perl r erlang and search engine</description>
  <language>zh_CN</language>
  <lastBuildDate>20120504-0030
</lastBuildDate>

<!--
  <image>
	<title>Searcher's Log</title>
	<url></url>
	<link>http://www.oreilly.com/example/</link>
	<width>88</width>
	<height>31</height>
	<description>A nice logo for the feed</description>
  </image>
-->


  <item>
	<title>博客迁移记</title>
	<author>crackcell</author>
	<link>http://blog.crackcell.com/posts/2012/04/01/blog_transfer.html</link>
	<pubDate>2012-04-01</pubDate>
	<description><![CDATA[<div id="table-of-contents"><h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1 博客迁移 </a></li>
<li><a href="#sec-2">2 写博简史 </a></li>
</ul>
</div>
</div>

<div id="outline-container-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> 博客迁移 </h2>
<div class="outline-text-2" id="text-1">

<p>半个月前，vps服务商发来邮件，说机房报告我的vps在攻击别人。大概看了下应该是被黑了，挂了木马。想着反正博客老是报503错误。为了一劳永逸，初步考虑把迁移博客迁移到github page。一直都是用emacs org-mode来写博客，也适合是用静态内容生成的方式。看了下github上<a href="https://github.com/mojombo/jekyll/">jekyll</a>等工具，都觉得不怎么顺手，就花了2小时用perl写了个把emacs org格式的文件生成博客的工具<a href="https://github.com/crackcell/orgblog-pl">orgblog-pl</a>。不过github生成页面的速度让我略不爽。最后把博客迁移到了<a href="http://sae.sina.com.cn/">sae</a>。目前一切顺利。
</p></div>

</div>

<div id="outline-container-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> 写博简史 </h2>
<div class="outline-text-2" id="text-2">

<p>06年的时候开始写博客，搬家了好几次，由于倒数据麻烦，每次搬家反而成了清洗劣质内容的过程。
</p><ul>
<li>
2006~2008：csdn，csdn的博客系统体验不好，当时老出问题
</li>
<li>
2008~2010：javaeye，在自己博客发招聘被封id，内容全丢了，发邮件给管理员没回应。不过客观来说je的博客体验不错
</li>
<li>
2010~2012：vps+独立域名
</li>
<li>
2012~现在：sina app engine+独立域名
</li>
</ul>

<p>真心希望，以后能不用折腾，多看点书，多写点博客
</p></div>
</div>
<div id="postamble">
<p class="author"> Author: Menglong Tan
<a href="mailto:tanmenglong AT gmail DOT com">&lt;tanmenglong AT gmail DOT com&gt;</a>
</p>
<p class="date"> Date: 2012-04-01 17:13:42 CST</p>
<p class="creator">HTML generated by org-mode 6.33x in emacs 23</p>
</div>
</div>
]]></description>
  </item>

  <item>
	<title>《MongoDB权威指南》读书笔记</title>
	<author>crackcell</author>
	<link>http://blog.crackcell.com/posts/2012/02/13/mongodb_the_definitive_guide.html</link>
	<pubDate>2012-02-13</pubDate>
	<description><![CDATA[<div id="table-of-contents"><h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1 基本概念 </a></li>
<li><a href="#sec-2">2 基本数据类型 </a></li>
<li><a href="#sec-3">3 基本CRUD操作 </a></li>
<li><a href="#sec-4">4 原子修改器 </a></li>
<li><a href="#sec-5">5 索引 </a></li>
</ul>
</div>
</div>

<div id="outline-container-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> 基本概念 </h2>
<div class="outline-text-2" id="text-1">

<ul>
<li>
文档：key-value的集合
</li>
<li>
集合：文档的集合
</li>
<li>
数据库：集合的集合
<ul>
<li>
admin：root数据库
</li>
<li>
local：本地数据库，可以用来存放任意的本地集合，数据不会被复制
</li>
<li>
config：配置数据库
</li>
</ul>
</li>
</ul>
</div>

</div>

<div id="outline-container-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> 基本数据类型 </h2>
<div class="outline-text-2" id="text-2">

<ul>
<li>
null
</li>
<li>
boolean
</li>
<li>
32位int（shell没有，会被转换成64位float）
</li>
<li>
64位int（shell没有，会被转换成64位float）
</li>
<li>
64位float
</li>
<li>
字符串
</li>
<li>
对象id
</li>
<li>
日期
</li>
<li>
javascrupt代码
</li>
<li>
二进制数据
</li>
<li>
最大值（shell里面没有）
</li>
<li>
最小值（shell里面没有）
</li>
<li>
未定义：undefined
</li>
<li>
数组
</li>
<li>
嵌套文档
</li>
</ul>
</div>

</div>

<div id="outline-container-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> 基本CRUD操作 </h2>
<div class="outline-text-2" id="text-3">

<ul>
<li>
插入
<ul>
<li>
数据库.集合[.子集合].insert()
</li>
<li>
数据库.集合[.子集合].save()，shell函数，不存在就增加，存在就更新
</li>
</ul>
</li>
<li>
检索
<ul>
<li>
检索出一个：数据库.集合[.子集合].findOne()
</li>
<li>
检索多个：数据库.集合[.子集合].find()
</li>
</ul>
</li>
<li>
更新：数据库.集合[.子集合].update()
</li>
<li>
删除：数据库.集合[.子集合].remove()
</li>
</ul>
</div>

</div>

<div id="outline-container-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> 原子修改器 </h2>
<div class="outline-text-2" id="text-4">

<ul>
<li>
$set：设置一个字段
</li>
<li>
$unset：删除一个字段
</li>
<li>
$push：向一个数组追加一个元素
</li>
<li>
$pushAll：向一个数组最佳多个元素
</li>
<li>
$pull：从数组中删除一个元素
</li>
<li>
$pushAll：从数组中删除多个元素
</li>
<li>
$inc：自增
</li>
<li>
$bit：位操作
</li>
<li>
$upsert：更新文档，文档不存在就创建
</li>
</ul>
</div>

</div>

<div id="outline-container-5" class="outline-2">
<h2 id="sec-5"><span class="section-number-2">5</span> 索引 </h2>
<div class="outline-text-2" id="text-5">

<ul>
<li>
创建索引：数据库.集合[.子集].ensureIndex()
</li>
<li>
获取查询中索引使用信息：数据库.集合[.子集].explain()
</li>
</ul>
</div>
</div>
<div id="postamble">
<p class="author"> Author: crackcell
<a href="mailto:tanmenglong AT gmail DOT com">&lt;tanmenglong AT gmail DOT com&gt;</a>
</p>
<p class="date"> Date: 2012-03-19 14:56:06 CST</p>
<p class="creator">HTML generated by org-mode 6.33x in emacs 23</p>
</div>
</div>
]]></description>
  </item>

  <item>
	<title>论文笔记：来自riak的bitcask</title>
	<author>crackcell</author>
	<link>http://blog.crackcell.com/posts/2010/12/24/bitcask_intro.html</link>
	<pubDate>2010-12-24</pubDate>
	<description><![CDATA[<div id="table-of-contents"><h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1 bitcask是啥？ </a></li>
<li><a href="#sec-2">2 bitcask的存储模型 </a></li>
<li><a href="#sec-3">3 小结 </a></li>
<li><a href="#sec-4">4 参考 </a></li>
</ul>
</div>
</div>

<div id="outline-container-1" class="outline-2">
<h2 id="sec-1"><span class="section-number-2">1</span> bitcask是啥？ </h2>
<div class="outline-text-2" id="text-1">

<p>bitcask来自于riak，是一个日志（log-structured）存储系统。用在riak的分布式数据库的底层key-value的存储。
</p></div>

</div>

<div id="outline-container-2" class="outline-2">
<h2 id="sec-2"><span class="section-number-2">2</span> bitcask的存储模型 </h2>
<div class="outline-text-2" id="text-2">

<p>bitcask的存储模型抽象之后非常简单。
</p><ol>
<li>
insert过程
一个bitcask就是一个文件夹。任意时间点，只会有一个进程来写这个文件夹中的一个文件。所有对文件的写操作都以追加的形式执行。这样的好处是不需要在磁盘上寻找数据，所有的操作都是顺序地写。每次都会写入一个记录的实体。更改和删除也只是新数据的追加。每个数据实体的结构如下
<a href="#sec-2"><img src="http://blog.crackcell.com/posts/2010/12/24/bitcask_intro//bitcask_entity.jpg"/></a>
<ol>
<li>
crc是数据体的校检码
</li>
<li>
tstamp是时间戳
</li>
<li>
ksz是key的长度
</li>
<li>
value<sub>sz是value的长度</sub>
</li>
<li>
最后紧接着key和value
</li>
</ol>

<p>一个文件由顺序的一系列数据实体构成，如下
<a href="#sec-2"><img src="http://blog.crackcell.com/posts/2010/12/24/bitcask_intro//bitcask_entity_file.jpg"/></a>
此外，内存中会存着一份key的列表，如下
<a href="#sec-2"><img src="http://blog.crackcell.com/posts/2010/12/24/bitcask_intro//bitcask_keylist.jpg"/></a>
insert的时候，key的指向会随时根据添加指向最新的数据。旧的数据依旧保留在磁盘上。当文件达到一定大小，它将被关闭。
</p></li>
<li>
merge过程
merge操作会清除旧的文件数据
</li>
</ol>
</div>

</div>

<div id="outline-container-3" class="outline-2">
<h2 id="sec-3"><span class="section-number-2">3</span> 小结 </h2>
<div class="outline-text-2" id="text-3">

<p>bitcask是一个典型用空间换时间来提高写入性能的产品。因为省去了磁盘seek时间，io性能很好。而且在写入数据的时候不修改数据，不会产生碎片，所以也就省去了让人讨厌的碎片清理的过程。
但是它的缺点也显而易见，由于数据清理都统一在merge过程中做，这时延迟会比较明显。这也是各种类似bitcask思路的存储系统实现各显神通的地方了。优化方法比较好想，比如只merge已经被关闭的文件等，这里就不赘述了。
</p></div>

</div>

<div id="outline-container-4" class="outline-2">
<h2 id="sec-4"><span class="section-number-2">4</span> 参考 </h2>
<div class="outline-text-2" id="text-4">

<p>bitcask intro, <a href="http://downloads.basho.com/papers/bitcask-intro.pdf">http://downloads.basho.com/papers/bitcask-intro.pdf</a>
</p></div>
</div>
<div id="postamble">
<p class="author"> Author: crackcell
<a href="mailto:tanmenglong AT gmail DOT com">&lt;tanmenglong AT gmail DOT com&gt;</a>
</p>
<p class="date"> Date: 2012-03-19 14:56:02 CST</p>
<p class="creator">HTML generated by org-mode 6.33x in emacs 23</p>
</div>
</div>
]]></description>
  </item>


</channel>
</rss>
